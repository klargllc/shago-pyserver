# Generated by Django 2.2.14 on 2022-09-27 16:39

from django.db import migrations, models
import django.db.models.deletion
import places.utils.helpers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('metrics', '0001_initial'),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Customization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, unique=True)),
                ('required', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CustomizationOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option', models.CharField(max_length=100, unique=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=1000)),
                ('customization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to', to='places.Customization')),
            ],
        ),
        migrations.CreateModel(
            name='FoodImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='food/')),
            ],
        ),
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('about', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=1000)),
                ('featured', models.BooleanField(default=False)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='places.Category')),
                ('customizations', models.ManyToManyField(blank=True, related_name='customizations', to='places.Customization')),
                ('images', models.ManyToManyField(blank=True, related_name='images', to='places.FoodImage')),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_type', models.CharField(choices=[('custom', 'custom'), ('facebook', 'facebook'), ('instagram', 'instagram'), ('twitter', 'twitter'), ('whatsapp', 'whatsapp'), ('telegram', 'telegram'), ('website', 'website'), ('tiktok', 'tiktok')], default='custom', max_length=40)),
                ('url', models.URLField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('msg_type', models.CharField(max_length=20)),
                ('message', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('hotspot', 'hotspot'), ('offline', 'offline'), ('website', 'hotspot')], default='hotspot', max_length=20)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('confirmed', models.BooleanField(default=False)),
                ('delivered', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('on-route', 'On Route'), ('delivered', 'Delivered')], default='pending', max_length=20)),
                ('delivery_is_on', models.BooleanField(default=False)),
                ('invoice', models.CharField(default=places.utils.helpers.generate_invoice_id, max_length=12, unique=True)),
                ('paid', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='OrderCustomization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='places.Customization')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='places.CustomizationOption')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('banner', models.ImageField(blank=True, null=True, upload_to='places/banner')),
                ('about', models.TextField(blank=True, null=True)),
                ('categories', models.ManyToManyField(blank=True, to='places.Category')),
                ('links', models.ManyToManyField(blank=True, to='places.Link')),
                ('menu', models.ManyToManyField(blank=True, to='places.FoodItem')),
                ('notifications', models.ManyToManyField(blank=True, to='places.NotificationMessage')),
                ('orders', models.ManyToManyField(blank=True, to='places.Order')),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.BusinessAccount')),
                ('reviews', models.ManyToManyField(blank=True, to='metrics.Review')),
                ('staff', models.ManyToManyField(blank=True, related_name='staff', to='accounts.RestaurantStaff')),
                ('tags', models.ManyToManyField(blank=True, to='places.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('customizations', models.ManyToManyField(blank=True, to='places.OrderCustomization')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='places.FoodItem')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='items',
            field=models.ManyToManyField(blank=True, to='places.OrderItem'),
        ),
        migrations.AddField(
            model_name='notificationmessage',
            name='to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='places.Restaurant'),
        ),
        migrations.AddField(
            model_name='link',
            name='place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='places.Restaurant'),
        ),
        migrations.AddField(
            model_name='fooditem',
            name='place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='places.Restaurant'),
        ),
        migrations.AddField(
            model_name='fooditem',
            name='reviews',
            field=models.ManyToManyField(blank=True, related_name='reviews', to='metrics.Review'),
        ),
        migrations.AddField(
            model_name='fooditem',
            name='tags',
            field=models.ManyToManyField(blank=True, to='places.Tag'),
        ),
        migrations.AddField(
            model_name='foodimage',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='places.FoodItem'),
        ),
        migrations.AddField(
            model_name='customization',
            name='default_option',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='default', to='places.CustomizationOption'),
        ),
        migrations.AddField(
            model_name='customization',
            name='food_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='places.FoodItem'),
        ),
        migrations.AddField(
            model_name='customization',
            name='options',
            field=models.ManyToManyField(blank=True, related_name='choices', to='places.CustomizationOption'),
        ),
    ]
